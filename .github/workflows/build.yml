name: Build and Publish .NET Project

on:
  push:
    branches:
      - main 

jobs:
  build:
    name: Build and Test .NET Project
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuração do .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8

      # Restore dependências
      - name: Restore dependencies
        run: dotnet restore

      # Build do projeto
      - name: Build project
        run: dotnet build --no-restore --configuration Release

      # Executar os testes e calcular a cobertura
      - name: Run tests and collect coverage
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

      # Publicar relatório de cobertura
      - name: Upload code coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: '**/coverage.cobertura.xml'

  publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuração do Docker
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build da imagem Docker
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-dotnet-app:latest .

      # Publish da imagem para o Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-dotnet-app:latest
